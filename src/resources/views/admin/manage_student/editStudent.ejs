<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student list</title>

    <style>
        /* General Table Styling */
        table {
            width: 90%;
            margin: 20px auto;
            border-collapse: collapse;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }

        /* Header Styling */
        th {
            background-color: #f89b28;
            color: white;
        }

        /* Cell Styling */
        td {
            background-color: #fff;
        }

        /* Hover Effect for Table Rows */
        tr:hover {
            background-color: #f9f9f9;
        }

        /* Button Styling */
        input[type="submit"], input[type="button"], button {
            background-color: #f89b28;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 4px;
        }

        button:hover, input[type="submit"]:hover, input[type="button"]:hover {
            background-color: #e07b1f;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            table {
                width: 100%;
                margin: 10px;
            }

            .alert-box {
                width: 90%;
            }
        }

        /* Initially hide the edit form */
        .alert-box {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            border: 1px solid #ccc;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 20px;
            z-index: 1000;
        }

        /* Overlay for background */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
    </style>
</head>
<body>
    <h1>Student list</h1>
    <table>
        <tr>
            <th>Student ID</th>
            <th>Student Name</th>
            <th>Student Birthday</th>
            <th>Student Email</th>
            <th>Participate In</th> <!-- Column header styled correctly -->
            <th>Action</th>
        </tr>
        <% students.forEach(student => { %>
            <tr>
                <td><%= student.studentID.toUpperCase() %></td>
                <td><%= student.name %></td>
                <td><%= student.DoB ? new Date(student.DoB).toLocaleDateString('en-GB') : 'No data' %></td>
                <td><%= student.email %></td>
                <td><%= Array.isArray(student.courseID) ? student.courseID.join(', ') : student.courseID %></td>
                <td>
                    <button onclick="openForm('<%= student.studentID %>', '<%= student.name %>', '<%= student.DoB %>')">Edit</button>
                    <button onclick="deleteStudent('<%= student.studentID %>')">Delete</button>
                </td>
            </tr>
        <% }); %>
    </table>

    <br>
    <table>
        <tr>
            <td><a href="/admin">Back to Home</a></td>
            <td><a href="/admin/manage_student/insert">Insert new Student</a></td>
        </tr>
    </table>

    <!-- Alert Box (Initially hidden) -->
    <div class="overlay" id="overlay"></div>
    <div class="alert-box" id="editForm">
        <h2>Edit Student Information</h2>
        <form id="editStudentForm">
            <input type="hidden" name="id" id="studentId">
            <table>
                <tr>
                    <td>Student ID:</td>
                    <td>
                        <input type="text" name="studentID" id="studentID" disabled>
                    </td>
                </tr>
                <tr>
                    <td>Name:</td>
                    <td>
                        <input type="text" name="name" id="name">
                    </td>
                </tr>
                <tr>
                    <td>Birthday:</td>
                    <td>
                        <input type="date" name="DoB" id="DoB">
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" value="Save">
                    </td>
                    <td>
                        <input type="button" value="Cancel" onclick="closeEditForm()">
                    </td>
                </tr>
            </table>
        </form>
    </div>

    <script>
        const form = document.getElementById('editStudentForm');
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const studentID = document.getElementById('studentID').value.toLowerCase();
            const name = document.getElementById('name').value;
            const DoB = document.getElementById('DoB').value;
            const email = studentID + '@student.hcmiu.edu.com';
            const action = '/admin/manage_student/edit/' + studentID;

            try {
                const res = await fetch(action, {
                    method: 'PUT',
                    body: JSON.stringify({ studentID, name, DoB, email }),
                    headers: { 'Content-Type': 'application/json' },
                });

                if (res.status >= 200 && res.status < 300) {
                    alert(`Student '${studentID.toUpperCase()}' updated successfully`);
                    location.reload();
                }
            } catch (error) {
                console.log(error);
            }
        });

        openForm = (studentID, name, DoB) => {
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('editForm').style.display = 'block';

            document.getElementById('studentID').value = studentID.toUpperCase();
            document.getElementById('name').value = name;

            // Format DoB if valid
            if (DoB) {
                let formattedDoB = '';
                const dateObj = new Date(DoB);
                if (!isNaN(dateObj)) {
                    const year = dateObj.getFullYear();
                    const month = String(dateObj.getMonth() + 1).padStart(2, '0');
                    const day = String(dateObj.getDate()).padStart(2, '0');
                    formattedDoB = `${year}-${month}-${day}`;
                }
                document.getElementById('DoB').value = formattedDoB;
            } else {
                document.getElementById('DoB').value = '';
            }
        };

        function closeEditForm() {
            document.getElementById('editForm').style.display = 'none';
            document.getElementById('overlay').style.display = 'none';
        }

        async function deleteStudent(studentID) {
            const action = '/admin/manage_student/delete/' + studentID;
            try {
                const res = await fetch(action, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                });

                if (res.status >= 200 && res.status < 300) {
                    alert(`Student '${studentID.toUpperCase()}' deleted successfully`);
                    location.reload();
                }
            } catch (error) {
                console.log(error);
            }
        }
    </script>
</body>
</html>
