<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Progressing Course List</title>
    <style>
        .alert-box {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            border: 1px solid #ccc;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 20px;
            z-index: 1000;
            width: 80%;
            max-width: 500px;
        }
        .alert-box input, .alert-box button {
            display: block;
            margin: 10px 0;
            padding: 8px;
            width: 100%;
        }
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
        
    </style>
    <%- include ('../partials/style.ejs'); -%>
</head>
<body>
    <%- include ('../partials/navigation.ejs'); -%>
    <div class="nav-option">
        <div class="option">
            <a href="/admin/manage_progressing_course/insert">Insert New Progressing Course</a>
            <a href="/admin/manage_progressing_course">Back to Manage</a>
        </div>
        <h2>Progressing Course List</h2>
    </div>
    <div class="container">
        <table class="table-list">
            <thead>
                <tr>
                    <th>Course ID</th>
                    <th>Course Teacher</th>
                    <th>Students</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% pCourses.forEach(pCourse => { %>
                <tr id="<%= pCourse._id %>">
                    <td><%= pCourse.courseID %></td>
                    <td><%= pCourse.teacherID %></td>
                    <td><%= pCourse.students %></td>
                    <% if (pCourse.courseID !== 'admin') { %>
                        <td class="action">
                            <% let studentOut = pCourse.studentsNotInThisCourse; %>
                            <% let studentIDList = ""; %>
                            <% studentOut.forEach((student, index) => { %>
                                <% studentIDList += student.studentID; %>
                                <% if (index < studentOut.length - 1) { %>
                                    <% studentIDList += ","; %>
                                <% } %>
                            <% }); %>                            
                            <button class="edit-btn" onclick="openForm('<%= pCourse._id %>', '<%= pCourse.courseID %>', '<%= pCourse.teacherID %>', '<%= pCourse.students %>', '<%= studentIDList%>')">Edit</button>
                            <button class="delete-btn" onclick="deletePCourse('<%= pCourse._id %>')">Delete</button>
                        </td>
                    <% } %>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <!-- Overlay and Alert Box -->
    <div class="overlay" id="overlay"></div>
    <div class="alert-box" id="editForm">
        <h2>Edit Progressing Course Information</h2>
        <form id="edit-progressing-course-form">
            <input type="hidden" name="id" id="pCourseID" >
            <label for="courseID">Course ID:</label>
            <input type="text" name="courseID" id="courseID" disabled>

            <label for="teacherID">Teacher ID:</label>
            <input type="text" name="teacherID" id="teacherID" required>

            <label class="student-inclass">Students:</label>
            <ul class="student-inclass" id="student_ids">

            </ul>

            <label>Insert Students:</label>
            <ul class="student-outside" id="insert-student-ul">

            </ul>

            <input type="submit" value="Save" onclick="handleFormSubmit(event)">
            <input type="button" value="Cancel" onclick="closeEditForm()">
        </form>
    </div>

    <script>
        const overlay = document.getElementById('overlay');
        const editForm = document.getElementById('editForm');

        async function handleFormSubmit(event) {
            event.preventDefault();

            const pCourseID = document.getElementById('pCourseID').value;
            const courseID = document.getElementById('courseID').value;
            const teacherID = document.getElementById('teacherID').value;
            const studentIDs = Array.from(document.querySelectorAll('#student_ids .selected-student')).map(li => li.id);

            try {
                const response = await fetch(`/admin/manage_progressing_course/edit/${pCourseID}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ courseID, teacherID, studentIDs }),
                });

                if (response.status >= 200 && response.status < 300) {
                    alert(`Progressing course '${pCourseID}' updated successfully`);
                    location.reload();
                } else {
                    console.error('Failed to update progressing course');
                }
            } catch (error) {
                console.error(error);
            }
        }
        
        async function deletePCourse(pCourseID) {
            try {
                const res = await fetch(`/admin/manage_progressing_course/delete/${pCourseID}`, { method: 'DELETE' });

                if (res.status >= 200 && res.status < 300) {
                    alert(`Progressing course '${pCourseID}' deleted successfully`);
                    location.reload();
                } else {
                    console.error('Failed to delete course');
                }
            } catch (error) {
                console.error(error);
            }
        }

        function openForm(pCourseID, courseID, teacherID, studentIDs, notInProgressingCourse) {
            document.getElementById('pCourseID').value = pCourseID;
            document.getElementById('courseID').value = courseID;
            document.getElementById('teacherID').value = teacherID;

            const studentIdsDiv = document.getElementById('student_ids');
            studentIdsDiv.innerHTML = '';

            studentIDs.split(',').forEach(studentID => {
                const li = document.createElement('li');
                li.id = studentID;
                li.className = 'selected-student';
                li.textContent = studentID;

                const deleteBtn = document.createElement('button');
                deleteBtn.textContent = 'Delete';
                deleteBtn.className = 'delete-btn';
                deleteBtn.onclick = () => li.remove();
                li.appendChild(deleteBtn);

                studentIdsDiv.appendChild(li);
            });

            const insertStudentUl = document.getElementById('insert-student-ul');
            insertStudentUl.innerHTML = '';

            notInProgressingCourse.split(',').forEach(studentID => {
                const li = document.createElement('li');
                li.id = studentID;
                li.className = 'selected-student';
                li.textContent = studentID;

                const insertBtn = document.createElement('button');
                insertBtn.textContent = 'Insert';
                insertBtn.className = 'insert-btn';
                insertBtn.onclick = () => {
                    const newLi = li.cloneNode(true);
                    newLi.className = 'selected-student';

                    const deleteBtn = document.createElement('button');
                    deleteBtn.textContent = 'Delete';
                    deleteBtn.className = 'delete-btn';
                    deleteBtn.onclick = () => newLi.remove();
                    newLi.appendChild(deleteBtn);

                    studentIdsDiv.appendChild(newLi);
                    li.remove();
                };
                li.appendChild(insertBtn);

                insertStudentUl.appendChild(li);
            });

            overlay.style.display = 'block';
            editForm.style.display = 'block';
        }

        function closeEditForm() {
            overlay.style.display = 'none';
            editForm.style.display = 'none';
        }
    </script>
</body>
</html>
